/**
 * hihocoder-week70-Divided Product
 * 2015-11-05 21:16:59
 * xuchen
**/
/**
 * gcd, dp
**/
#include <iostream>
#include <vector>
#include <string.h>
#include <stdlib.h>
using namespace std;

const int N = 105;
const int M = 55;
const int _MAX = 1000000007;
int f[N][N][M];
int gcdarray[N*M];

int gcd(int a, int b)
{
	int tmp;
	tmp = max(a, b);
	b = min(a, b);
	a = tmp;
	if(a%b==0)
		return b;
	tmp = a-b;
	return gcd(tmp, b);
}

void initGcd(int n, int m)
{
	int t = n*m;
	for(int i=1; i<=t; i++)
		gcdarray[i] = gcd(i, m);
}

int main()
{
	int n, m, cnt=0;
	scanf("%d%d", &n, &m);
	initGcd(n, m);
	f[0][0][1] = 1;
	for(int i=0; i<=n; i++)
	{
		for(int j=0; j<=n; j++)
		{
			for(int k=1; k<=m; k++)
			{
				if(f[i][j][k]>0)
				{
					for(int l = j+1; l<=n-i; l++)
					{
						f[i+l][l][gcdarray[l*k]]=(f[i][j][k]+f[i+l][l][gcdarray[l*k]])%_MAX;
					}
				}
			}
		}
	}
	for(int i=1; i<=n; i++)
	{
		cnt+=f[n][i][m];
		cnt%=_MAX;
	}
	printf("%d\n", cnt);

	return 0;
}
